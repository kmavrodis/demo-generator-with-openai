{"id": "bb3d468a-39f5-41c4-a74a-578a2242ec22", "use_case": "Company analysis for Microsoft Account Executives", "detailed_description": "### Demo Description: Company Information Fetcher\n\n#### Main Features of the Demo:\n- **Company Information Retrieval:** Fetch basic company information from the Alpha Vantage API using the provided company name.\n- **Display Results:** Present the retrieved information in a user-friendly format.\n- **Interactive UI:** A button to trigger the information retrieval process.\n\n#### User Interface Elements:\n- **Input Text Box:** For users to enter the company name.\n- **Fetch Button:** To initiate the API request and display the results.\n- **Results Section:** To show the retrieved company information including company overview, market capitalization, and stock price.\n- **Loading Indicator:** To inform users that the data is being fetched.\n\n#### Data Processing Steps:\n1. **User Input:** User enters the company name in the text box.\n2. **Button Click:** User clicks the \"Fetch\" button.\n3. **API Request:** The application sends a request to the Alpha Vantage API to fetch company information.\n4. **Data Parsing:** Parse the response from the Alpha Vantage API to extract relevant details.\n5. **Display Information:** Display the parsed information in the results section of the UI.\n6. **Error Handling:** Handle potential errors such as invalid company names or network issues gracefully.\n\n#### Visual Elements and Dummy Data:\n- Mock the results section with dummy data initially to show example output.\n- Use visual elements like cards or tables to organize the displayed information.\n- Include placeholders or examples in the input text box to guide users.\n\nInstruct the engineer to use Streamlit for creating the UI components and managing the API request-response cycle. They should ensure the demo is interactive and user-friendly by incorporating visual cues and handling potential errors.", "code": "import streamlit as st\nimport requests\nimport os\n\n# Install necessary packages if not already installed\ntry:\n    import streamlit as st\nexcept ImportError:\n    os.system('pip install streamlit')\n\ntry:\n    import requests\nexcept ImportError:\n    os.system('pip install requests')\n\ntry:\n    from openai import AzureOpenAI\nexcept ImportError:\n    os.system('pip install openai')\n\n# Function to fetch company overview information from Alpha Vantage API\ndef fetch_company_overview(company_name, api_key):\n    base_url = \"https://www.alphavantage.co/query\"\n    params = {\n        \"function\": \"OVERVIEW\",\n        \"symbol\": company_name,\n        \"apikey\": api_key\n    }\n    response = requests.get(base_url, params=params)\n    if response.status_code == 200:\n        return response.json()\n    else:\n        return None\n\n# Function to fetch company earnings information from Alpha Vantage API\ndef fetch_company_earnings(company_name, api_key):\n    base_url = \"https://www.alphavantage.co/query\"\n    params = {\n        \"function\": \"EARNINGS\",\n        \"symbol\": company_name,\n        \"apikey\": api_key\n    }\n    response = requests.get(base_url, params=params)\n    if response.status_code == 200:\n        return response.json()\n    else:\n        return None\n\n# Function to generate insights and recommendations using Azure OpenAI\ndef generate_insights_and_recommendations(company_info):\n    client = AzureOpenAI(\n        api_key=os.getenv(\"OPENAI_API_KEY\"),  \n        api_version=\"2023-12-01-preview\",\n        azure_endpoint=os.getenv(\"OPENAI_ENDPOINT\")\n    )\n    \n    prompt = f\"\"\"\n    The following is an overview of a company. Analyze this information and provide insights on the most important fields the company is investing in and suggest how Microsoft Azure cloud services can help them.\n\n    Company Description: {company_info.get('Description', 'N/A')}\n    Sector: {company_info.get('Sector', 'N/A')}\n    Industry: {company_info.get('Industry', 'N/A')}\n    \"\"\"\n\n    chat_completion = client.chat.completions.create(\n        model = os.getenv(\"OPENAI_DEPLOYMENT_NAME\"),\n        messages=[{\"role\": \"user\", \"content\": prompt}]\n    )\n\n    return chat_completion.choices[0].message.content\n\n# Function to display company overview information\ndef display_company_overview(info):\n    st.subheader(\"Company Overview\")\n    st.write(f\"**Name:** {info.get('Name', 'N/A')}\")\n    st.write(f\"**Description:** {info.get('Description', 'N/A')}\")\n    st.write(f\"**Market Capitalization:** {info.get('MarketCapitalization', 'N/A')}\")\n    st.write(f\"**Sector:** {info.get('Sector', 'N/A')}\")\n    st.write(f\"**Industry:** {info.get('Industry', 'N/A')}\")\n    st.write(f\"**Address:** {info.get('Address', 'N/A')}\")\n    st.write(f\"**PE Ratio:** {info.get('PERatio', 'N/A')}\")\n    st.write(f\"**Dividend Yield:** {info.get('DividendYield', 'N/A')}\")\n    return {\n        \"Description\": info.get('Description', 'N/A'),\n        \"Sector\": info.get('Sector', 'N/A'),\n        \"Industry\": info.get('Industry', 'N/A')\n    }\n\n# Function to display company earnings information\ndef display_company_earnings(info):\n    st.subheader(\"Latest Earnings\")\n    earnings = info.get(\"quarterlyEarnings\", [])\n    if earnings:\n        latest_earnings = earnings[0]\n        st.write(f\"**Fiscal Date Ending:** {latest_earnings.get('fiscalDateEnding', 'N/A')}\")\n        st.write(f\"**Reported EPS:** {latest_earnings.get('reportedEPS', 'N/A')}\")\n        st.write(f\"**Estimated EPS:** {latest_earnings.get('estimatedEPS', 'N/A')}\")\n        st.write(f\"**Surprise:** {latest_earnings.get('surprise', 'N/A')} ({latest_earnings.get('surprisePercentage', 'N/A')}%)\")\n    else:\n        st.write(\"No earnings information available.\")\n\n# Set Streamlit page title and description\nst.title(\"Company Information and Earnings Fetcher\")\nst.write(\"Enter a company name to fetch its information and latest earnings using the Alpha Vantage API. Additionally, get insights on the main investment fields and how Microsoft Azure cloud services can support the company.\")\n\n# API Key (please replace with your Alpha Vantage API Key)\napi_key = '6S9IT2UVN66N9XNB'\n\n# Input text box for company name\ncompany_name = st.text_input(\"Company Name\", value=\"\", placeholder=\"E.g., IBM, AAPL\")\n\n# Fetch button\nif st.button(\"Fetch Information\"):\n    if company_name:\n        # Show loading indicator\n        with st.spinner(\"Fetching company information...\"):\n            # Fetch company overview info\n            company_overview = fetch_company_overview(company_name, api_key)\n            # Fetch company earnings info\n            company_earnings = fetch_company_earnings(company_name, api_key)\n\n            if company_overview:\n                overview_info = display_company_overview(company_overview)\n                insights = generate_insights_and_recommendations(overview_info)\n                st.write(\"### Insights and Recommendations\")\n                st.write(insights)\n            else:\n                st.error(\"Failed to fetch company overview information. Please check the company name and try again.\")\n            \n            if company_earnings:\n                display_company_earnings(company_earnings)\n            else:\n                st.warning(\"Failed to fetch company earnings information.\")\n    else:\n        st.warning(\"Please enter a valid company name.\")"}